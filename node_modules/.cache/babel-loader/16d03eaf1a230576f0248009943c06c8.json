{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\UTN\\\\Tercer Cuatrimeste\\\\Lab. de Comp III\\\\ReactJS\\\\Pr\\xE1cticas\\\\utn_tup_lab_comp_3\\\\src\\\\practica_2\\\\components\\\\Main.js\";\nimport Body from './Body';\nimport React from 'react'; // const returnMovieTitle = () => {\n//     return watchList.filter(\n//         movie => movie.Director === 'Christopher Nolan' && Number(movie.imdbRating) > 8.0\n//     ).map(movie => movie.Title)\n//     // Aquí adentro escriban la función\n// }\n// // condición ? si es verdadera  : sino\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst links = [{\n  site: 'https://www.google.com/?gws_rd=ssl'\n}, {\n  site: 'https://es-la.facebook.com/'\n}];\n\nconst returnLinks = () => {\n  return links.map(link => link.site);\n};\n\nconst Main = _ref => {\n  let {\n    pageBody\n  } = _ref;\n  let linksArray = returnLinks(links);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: linksArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: index,\n          children: [\"asdasd\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}; //<li key={index}>{item}</li>\n\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Body","React","links","site","returnLinks","map","link","Main","pageBody","linksArray","item","index"],"sources":["C:/Users/PC/Desktop/UTN/Tercer Cuatrimeste/Lab. de Comp III/ReactJS/Prácticas/utn_tup_lab_comp_3/src/practica_2/components/Main.js"],"sourcesContent":["import Body from './Body'\r\nimport React from 'react'\r\n\r\n\r\n// const returnMovieTitle = () => {\r\n\r\n//     return watchList.filter(\r\n//         movie => movie.Director === 'Christopher Nolan' && Number(movie.imdbRating) > 8.0\r\n//     ).map(movie => movie.Title)\r\n//     // Aquí adentro escriban la función\r\n// }\r\n// // condición ? si es verdadera  : sino\r\n\r\n\r\nconst links = [\r\n    {\r\n        site: 'https://www.google.com/?gws_rd=ssl',\r\n    },\r\n    {\r\n        site: 'https://es-la.facebook.com/'\r\n    }\r\n];\r\n\r\nconst returnLinks = () => {\r\n    return links.map(link => link.site)\r\n};\r\n\r\nconst Main = ({ pageBody }) => {\r\n    let linksArray = returnLinks(links);\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    {/* <a href='https://www.google.com/?gws_rd=ssl'> Google</a>\r\n                    <br></br>\r\n                    <a href='https://es-la.facebook.com/'> Facebook</a> */}\r\n\r\n                    {linksArray.map((item, index) => (\r\n                        <a href={index}>asdasd{item}</a>\r\n                        \r\n                    ))}\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<li key={index}>{item}</li>\r\nexport default Main"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,KAAK,GAAG,CACV;EACIC,IAAI,EAAE;AADV,CADU,EAIV;EACIA,IAAI,EAAE;AADV,CAJU,CAAd;;AASA,MAAMC,WAAW,GAAG,MAAM;EACtB,OAAOF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACH,IAAvB,CAAP;AACH,CAFD;;AAIA,MAAMI,IAAI,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC3B,IAAIC,UAAU,GAAGL,WAAW,CAACF,KAAD,CAA5B;EACA,oBACI;IAAA,uBACI;MAAA,uBACI;QAAA,UAKKO,UAAU,CAACJ,GAAX,CAAe,CAACK,IAAD,EAAOC,KAAP,kBACZ;UAAG,IAAI,EAAEA,KAAT;UAAA,qBAAuBD,IAAvB;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MALL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CAnBD,C,CAqBA;;;KArBMH,I;AAsBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}